

// Based on and inspired by node's child_process.fork() function
exports.spawn = function spawnSlave(modulePath) {
	var spawn = require('child_process').spawn;
	var Remote = require('remoteagent-protocol').Remote;

	var pipe = createPipe(true);

	var child = spawn(process.execPath, [require.resolve('./stub.js')], {
		customFds: [-1, 1, 2],
		env: { NODE_SLAVE_SCRIPT: modulePath },
		stdinStream: pipe
	});

  	var remote = new Remote(child.stdin, child.stdin, 0);
	remote.on('error', function (err) { child.emit('error', err); });
	remote.on('message', function (message) {
		child.emit('message', message);
	});
	child.send = function (message) {
		remote.emitRemote("message", message);
	};
	child.stdin.resume();

	return child;
};


var Pipe;
function createPipe(ipc) {
  // Lazy load
  if (!Pipe) {
    Pipe = process.binding('pipe_wrap').Pipe;
  }
  return new Pipe(ipc);
}
